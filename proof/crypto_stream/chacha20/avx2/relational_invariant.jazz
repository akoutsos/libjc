fn p1_to_s1(reg u32[16] st_1 st_2) -> reg u256[4]
{
  inline int i;
  reg u256[4] st;

  for i=0 to 4
  { st[i] = 0;
    st[i] = #x86_VINSERTI128(st[i], st_1[u128 i], 0);
    st[i] = #x86_VINSERTI128(st[i], st_2[u128 i], 1);
  }

  return st;
}

fn foo_test_p1_to_s1() -> reg u32[16], reg u32[16], reg u256[4]
{
  inline int i;
  reg u32[16] st_1 st_2;
  reg u256[4] st;

  st_1[0] = 0x61707865;
  st_1[1] = 0x3320646e;
  st_1[2] = 0x79622d32;
  st_1[3] = 0x6b206574;
  for i=0 to 8 { st_1[4 +i] = (0xaabbccd0 + i); }
  st_1[12] = 1;
  for i=0 to 3 { st_1[13+i] = (0x11223340 + i); }

  st_2 = st_1;
  st_2[12] += 1;

  st = p1_to_s1(st_1, st_2);

  return st_1, st_2, st;
}

exec foo_test_p1_to_s1()
